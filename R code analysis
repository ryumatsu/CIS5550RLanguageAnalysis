# ==============================================================
# Load Required Libraries
# ==============================================================
library(readxl)
library(dplyr)
library(ggplot2)

# ==============================================================
# Load the Data
# ==============================================================
airbnb_data <- read_excel("data/AirbnbLA_2023--Cleaned.xlsx")

# ==============================================================
# Section 1: Temporal Trends Analysis
# ==============================================================

# Categorize listings by recent review frequency
airbnb_data <- airbnb_data %>%
  mutate(RecentReviewsCategory = ifelse(NumberOfReviewsL30D > 10, "High", "Low"))

# Calculate average review scores for each category
review_summary <- airbnb_data %>%
  group_by(RecentReviewsCategory) %>%
  summarize(AverageReviewScore = mean(ReviewScoresRating, na.rm = TRUE))
print(review_summary)

# Redefine "New" listings with a 360-day threshold
airbnb_data <- airbnb_data %>%
  mutate(ListingAgeCategory = ifelse(DaysSinceListing < 360, "New", "Old"))

# Calculate average reviews for new vs. old listings
new_old_reviews <- airbnb_data %>%
  group_by(ListingAgeCategory) %>%
  summarize(
    AverageReviewsL30D = mean(NumberOfReviewsL30D, na.rm = TRUE),
    AverageReviewScore = mean(ReviewScoresRating, na.rm = TRUE)
  )
print(new_old_reviews)

# ==============================================================
# Section 2: Visualizations for Temporal Trends
# ==============================================================

# Bar chart: Average Review Score by Listing Age Category
ggplot(new_old_reviews, aes(x = ListingAgeCategory, y = AverageReviewScore, fill = ListingAgeCategory)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Average Review Score by Listing Age Category",
    x = "Listing Age Category (New vs. Old)",
    y = "Average Review Score"
  ) +
  theme_minimal()

# Bar chart: Average Reviews in Last 30 Days by Listing Age Category
ggplot(new_old_reviews, aes(x = ListingAgeCategory, y = AverageReviewsL30D, fill = ListingAgeCategory)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Average Reviews in Last 30 Days by Listing Age Category",
    x = "Listing Age Category (New vs. Old)",
    y = "Average Reviews in Last 30 Days"
  ) +
  theme_minimal()

# ==============================================================
# Section 3: Flexibility Analysis
# ==============================================================

# Group by Instant Bookable status
instant_bookable_summary <- airbnb_data %>%
  group_by(InstantBookable) %>%
  summarize(
    AverageNumberOfReviews = mean(NumberOfReviews, na.rm = TRUE),
    AverageReviewScore = mean(ReviewScoresRating, na.rm = TRUE)
  )
print(instant_bookable_summary)

# Categorize listings based on minimum night requirements
airbnb_data <- airbnb_data %>%
  mutate(MinimumNightsCategory = ifelse(MinimumNights <= 2, "Short Stay", "Long Stay"))

# Group by Minimum Nights Category
min_nights_summary <- airbnb_data %>%
  group_by(MinimumNightsCategory) %>%
  summarize(
    AverageNumberOfReviews = mean(NumberOfReviews, na.rm = TRUE),
    AverageReviewScore = mean(ReviewScoresRating, na.rm = TRUE)
  )
print(min_nights_summary)

# ==============================================================
# Section 4: Value Perception Analysis
# ==============================================================

# Calculate average review scores and value scores
value_score_summary <- airbnb_data %>%
  summarize(
    AverageReviewScore = mean(ReviewScoresRating, na.rm = TRUE),
    AverageValueScore = mean(ReviewScoresValue, na.rm = TRUE),
    AverageNumberOfReviews = mean(NumberOfReviews, na.rm = TRUE)
  )
print(value_score_summary)

# ==============================================================
# Section 5: Positive Review Rate Analysis
# ==============================================================

# Define positive reviews based on a threshold
airbnb_data <- airbnb_data %>%
  mutate(IsPositiveReview = ifelse(ReviewScoresRating >= 4.5, 1, 0))

# Calculate positive review rate by Instant Bookable status
instant_bookable_positive <- airbnb_data %>%
  group_by(InstantBookable) %>%
  summarize(
    PositiveReviewRate = mean(IsPositiveReview, na.rm = TRUE),
    TotalReviews = n()
  )
print(instant_bookable_positive)

# Calculate positive review rate by Minimum Nights Category
min_nights_positive <- airbnb_data %>%
  group_by(MinimumNightsCategory) %>%
  summarize(
    PositiveReviewRate = mean(IsPositiveReview, na.rm = TRUE),
    TotalReviews = n()
  )
print(min_nights_positive)

# ==============================================================
# Section 6: Visualizations for Positive Review Rates
# ==============================================================

# Positive Review Rate by Instant Bookable Status
ggplot(instant_bookable_positive, aes(x = as.factor(InstantBookable), y = PositiveReviewRate, fill = as.factor(InstantBookable))) +
  geom_bar(stat = "identity") +
  labs(
    title = "Positive Review Rate by Instant Bookable Status",
    x = "Instant Bookable (0 = No, 1 = Yes)",
    y = "Positive Review Rate"
  ) +
  scale_fill_manual(values = c("0" = "skyblue", "1" = "lightcoral")) +
  theme_minimal()

# Positive Review Rate by Minimum Nights Requirement
ggplot(min_nights_positive, aes(x = MinimumNightsCategory, y = PositiveReviewRate, fill = MinimumNightsCategory)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Positive Review Rate by Minimum Nights Requirement",
    x = "Minimum Nights Requirement (Short Stay vs. Long Stay)",
    y = "Positive Review Rate"
  ) +
  scale_fill_manual(values = c("Short Stay" = "lightgreen", "Long Stay" = "lightblue")) +
  theme_minimal()

# ==============================================================
# Final Notes
# ==============================================================
# This code is structured for clarity and logical grouping of tasks:
# - Loading data and libraries
# - Analysis of temporal trends, flexibility, and value perception
# - Calculating positive review rates
# - Visualizations to support findings
